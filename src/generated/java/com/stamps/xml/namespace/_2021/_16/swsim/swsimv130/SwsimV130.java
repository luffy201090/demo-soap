package com.stamps.xml.namespace._2021._16.swsim.swsimv130;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * Stamps.com Web Services for Individual Meters (SWS/IM) Version 130
 *
 * This class was generated by Apache CXF 3.5.4
 * 2022-10-30T14:57:09.613+07:00
 * Generated source version: 3.5.4
 *
 */
@WebServiceClient(name = "SwsimV130",
                  wsdlLocation = "file:/Users/cuong/src/demo/demo-soap/src/main/resources/wsdl/swsimv130.wsdl",
                  targetNamespace = "http://stamps.com/xml/namespace/2021/16/swsim/SwsimV130")
public class SwsimV130 extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://stamps.com/xml/namespace/2021/16/swsim/SwsimV130", "SwsimV130");
    public final static QName SwsimV130Soap = new QName("http://stamps.com/xml/namespace/2021/16/swsim/SwsimV130", "SwsimV130Soap");
    public final static QName SwsimV130Soap12 = new QName("http://stamps.com/xml/namespace/2021/16/swsim/SwsimV130", "SwsimV130Soap12");
    static {
        URL url = null;
        try {
            url = new URL("file:/Users/cuong/src/demo/demo-soap/src/main/resources/wsdl/swsimv130.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(SwsimV130.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/Users/cuong/src/demo/demo-soap/src/main/resources/wsdl/swsimv130.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public SwsimV130(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SwsimV130(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SwsimV130() {
        super(WSDL_LOCATION, SERVICE);
    }

    public SwsimV130(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public SwsimV130(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public SwsimV130(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns SwsimV130Soap
     */
    @WebEndpoint(name = "SwsimV130Soap")
    public SwsimV130Soap getSwsimV130Soap() {
        return super.getPort(SwsimV130Soap, SwsimV130Soap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SwsimV130Soap
     */
    @WebEndpoint(name = "SwsimV130Soap")
    public SwsimV130Soap getSwsimV130Soap(WebServiceFeature... features) {
        return super.getPort(SwsimV130Soap, SwsimV130Soap.class, features);
    }


    /**
     *
     * @return
     *     returns SwsimV130Soap
     */
    @WebEndpoint(name = "SwsimV130Soap12")
    public SwsimV130Soap getSwsimV130Soap12() {
        return super.getPort(SwsimV130Soap12, SwsimV130Soap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SwsimV130Soap
     */
    @WebEndpoint(name = "SwsimV130Soap12")
    public SwsimV130Soap getSwsimV130Soap12(WebServiceFeature... features) {
        return super.getPort(SwsimV130Soap12, SwsimV130Soap.class, features);
    }

}
